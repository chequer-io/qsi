/* Generated by QSI

 Date: 2020-08-12
 Span: 1744:1 - 1811:15
 File: src/postgres/include/nodes/relation.h

*/

using Qsi.PostgreSql.Internal.Serialization;

namespace Qsi.PostgreSql.Internal.PG10.Types
{
    [PgNode("RestrictInfo")]
    internal class RestrictInfo : IPg10Node
    {
        public virtual NodeTag Type => NodeTag.T_RestrictInfo;

        public IPg10Node[] clause { get; set; }

        public bool? is_pushed_down { get; set; }

        public bool? outerjoin_delayed { get; set; }

        public bool? can_join { get; set; }

        public bool? pseudoconstant { get; set; }

        public bool? leakproof { get; set; }

        public uint? security_level { get; set; }

        public Bitmapset[] clause_relids { get; set; }

        public Bitmapset[] required_relids { get; set; }

        public Bitmapset[] outer_relids { get; set; }

        public Bitmapset[] nullable_relids { get; set; }

        public Bitmapset[] left_relids { get; set; }

        public Bitmapset[] right_relids { get; set; }

        public IPg10Node[] orclause { get; set; }

        public EquivalenceClass[] parent_ec { get; set; }

        public QualCost eval_cost { get; set; }

        public double? norm_selec { get; set; }

        public double? outer_selec { get; set; }

        public IPg10Node[] mergeopfamilies { get; set; }

        public EquivalenceClass[] left_ec { get; set; }

        public EquivalenceClass[] right_ec { get; set; }

        public EquivalenceMember[] left_em { get; set; }

        public EquivalenceMember[] right_em { get; set; }

        public IPg10Node[] scansel_cache { get; set; }

        public bool? outer_is_left { get; set; }

        public uint? hashjoinoperator { get; set; }

        public double? left_bucketsize { get; set; }

        public double? right_bucketsize { get; set; }
    }
}
