/* Generated by QSI

 Date: 2020-08-12
 Span: 1792:1 - 1833:11
 File: src/postgres/include/nodes/execnodes.h

*/

using Qsi.PostgreSql.Internal.Serialization;

namespace Qsi.PostgreSql.Internal.PG10.Types
{
    [PgNode("AggState")]
    internal class AggState : IPg10Node
    {
        public virtual NodeTag Type => NodeTag.T_AggState;

        public ScanState ss { get; set; }

        public IPg10Node[] aggs { get; set; }

        public int? numaggs { get; set; }

        public int? numtrans { get; set; }

        public AggStrategy? aggstrategy { get; set; }

        public AggSplit? aggsplit { get; set; }

        public AggStatePerPhaseData[] phase { get; set; }

        public int? numphases { get; set; }

        public int? current_phase { get; set; }

        public AggStatePerAggData[] peragg { get; set; }

        public AggStatePerTransData[] pertrans { get; set; }

        public ExprContext[] hashcontext { get; set; }

        public ExprContext[][] aggcontexts { get; set; }

        public ExprContext[] tmpcontext { get; set; }

        public ExprContext[] curaggcontext { get; set; }

        public AggStatePerTransData[] curpertrans { get; set; }

        public bool? input_done { get; set; }

        public bool? agg_done { get; set; }

        public int? projected_set { get; set; }

        public int? current_set { get; set; }

        public Bitmapset[] grouped_cols { get; set; }

        public IPg10Node[] all_grouped_cols { get; set; }

        public int? maxsets { get; set; }

        public AggStatePerPhaseData[] phases { get; set; }

        public Tuplesortstate[] sort_in { get; set; }

        public Tuplesortstate[] sort_out { get; set; }

        public TupleTableSlot[] sort_slot { get; set; }

        public AggStatePerGroupData[] pergroup { get; set; }

        public HeapTupleData[] grp_firstTuple { get; set; }

        public bool? table_filled { get; set; }

        public int? num_hashes { get; set; }

        public AggStatePerHashData[] perhash { get; set; }

        public AggStatePerGroupData[][] hash_pergroup { get; set; }

        public ProjectionInfo[] combinedproj { get; set; }

        public AggStatePerAggData[] curperagg { get; set; }
    }
}
