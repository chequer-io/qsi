<Project>

    <PropertyGroup>
        <OSPlatform Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">OSX</OSPlatform>
        <OSPlatform Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">Linux</OSPlatform>
        <OSPlatform Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">Windows</OSPlatform>
        <OSArchitecture>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</OSArchitecture>
    </PropertyGroup>

    <PropertyGroup Label="Constants">
        <ChakraCoreVersion>3.5.6</ChakraCoreVersion>
        <PgQueryVersion>4.2.1-15</PgQueryVersion>
    </PropertyGroup>

    <Choose>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'Linux|X64' ">
            <ItemGroup Label="Linux x64">
                <!-- TODO: Remove before merge (feature/pg-official-parser) -->
                <PackageReference Include="JavaScriptEngineSwitcher.ChakraCore.Native.linux-x64" Version="$(ChakraCoreVersion)"/>
                <PackageReference Include="PgQuery.Runtime.Linux-x64" Version="$(PgQueryVersion)"/>
            </ItemGroup>
        </When>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'Linux|Arm64' ">
            <ItemGroup Label="Linux arm64">
                <PackageReference Include="PgQuery.Runtime.Linux-Arm64" Version="$(PgQueryVersion)"/>
            </ItemGroup>
        </When>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'OSX|X64' ">
            <ItemGroup Label="OSX x64">
                <!-- TODO: Remove before merge (feature/pg-official-parser) -->
                <PackageReference Include="JavaScriptEngineSwitcher.ChakraCore.Native.osx-x64" Version="$(ChakraCoreVersion)"/>
                <PackageReference Include="PgQuery.Runtime.OSX-x64" Version="$(PgQueryVersion)"/>
            </ItemGroup>
        </When>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'OSX|Arm64' ">
            <ItemGroup Label="OSX arm64">
                <PackageReference Include="PgQuery.Runtime.OSX-Arm64" Version="$(PgQueryVersion)"/>
            </ItemGroup>
        </When>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'Windows|X64">
            <ItemGroup Label="Windows x64">
                <!-- TODO: Remove before merge (feature/pg-official-parser) -->
                <PackageReference Include="JavaScriptEngineSwitcher.ChakraCore.Native.win-x64" Version="$(ChakraCoreVersion)"/>
            </ItemGroup>
        </When>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'Windows|X86' ">
            <ItemGroup Label="Windows x86">
                <!-- TODO: Remove before merge (feature/pg-official-parser) -->
                <PackageReference Include="JavaScriptEngineSwitcher.ChakraCore.Native.win-x86" Version="$(ChakraCoreVersion)"/>
            </ItemGroup>
        </When>
        <When Condition=" '$(OSPlatform)|$(OSArchitecture)' == 'Windows|Arm' ">
            <ItemGroup Label="Windows ARM">
                <!-- TODO: Remove before merge (feature/pg-official-parser) -->
                <PackageReference Include="JavaScriptEngineSwitcher.ChakraCore.Native.win-arm" Version="$(ChakraCoreVersion)"/>
            </ItemGroup>
        </When>
    </Choose>

    <Target Name="Packages" BeforeTargets="CollectPackageReferences">
        <Message Text="OSPlatform: $(OSPlatform)" Importance="high"/>
        <Message Text="OSArchitecture: $(OSArchitecture)" Importance="high"/>
    </Target>

</Project>